-> A component is a small, reusable chunk of code that is responsible for one job. That job is often to render some HTML
-> var React = require('react') returned object = react libary
-> object for interaction with dom = require('react-dom')
-> components require component classes React.createClass
-> component class names -> capital letter
-> inside React.createClass is a js object with instructions
-> inside object: render function() with return
-> render example:
  
    var React = require('react')
    var ReactDOM = require('react-dom')

    var componentBlueprint = {
      render: function () {
        return <h1>Hello world</h1>
      }
    };

    var MyComponentClass = React.createClass(componentBlueprint);
    
-> Capital letters html tag -> jsx recognizes it as component instance. Thats why component classes need to have capital letters
-> Excellent owl example:

var React = require('react')
var ReactDOM = require('react-dom')

var owl = {
  title: "Excellent Owl",
  src: "https://s3.amazonaws.com/codecademy-content/courses/React/react_photo-owl.jpg"
};

// Component class starts here:
var MyComponentClass = React.createClass({
  render: function () {
    return (
   		<div>
      	<h1>{owl.title}</h1>
      	<img src = {owl.src} />
      </div>
    );
)};
  
ReactDOM.render(
  <MyComponentClass />,
  document.getElementById('app')
);


-> render funtion must consist of a return statement only
-> logic needs to be defined inside the render function
-> ifs in render function but above return
